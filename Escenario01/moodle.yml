version: "3.8"
services:
#?############################## cabecera  ##########################################



#?############################## phpmoodle  ##########################################
    php:
        image: zakery1369/moodle:latest
        container_name: "${PROJECT_NAME}_php-moodle"
        working_dir: /var/www/html
        volumes:
            - ./php-fpm/var/log/php-fpm:/var/log/php-fpm
            - ./var/www/html:/var/www/html
            - ./php-fpm/php.ini-development:/usr/local/etc/php/php.ini-development
            - ./php-fpm/php.ini-production:/usr/local/etc/php/php.ini-production
            - ./php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./php-fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./moodledata:/var/www/moodledata
        restart: unless-stopped
        networks:
            - Net_HL

#?############################## mariadb  ##########################################
    mariadb:
    ##todo: [docker|podman] run --volume ./mariadb-init:/docker-entrypoint-initdb.d --volume ./db-data:/var/lib/mysql --init-file=/docker-entrypoint-initdb.d/initfile.sql
        image: mariadb:$MARIADB_TAG
        container_name: "${PROJECT_NAME}_mariadb"
        stop_grace_period: 30s
        environment:
            MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
            MYSQL_DATABASE: $DB_NAME
            MYSQL_USER: $DB_USER
            MYSQL_PASSWORD: $DB_PASSWORD
        ports:
            - 3306
        volumes:
            - ./mariadb-init:/docker-entrypoint-initdb.d
            - ./db-data:/var/lib/mysql:rw
        networks:
            - Net_HL

#?############################## nginx  ##########################################
    nginx:
        image: nginx:latest
        container_name: "${PROJECT_NAME}_nginx"
        working_dir: /var/www/html
        volumes:
            - ./var/www/html:/var/www/html
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginxhtml:/usr/share/nginx/html:ro     #!mirar bien esto
        environment:
            - VIRTUAL_HOST=$PROJECT_BASE_URL
            - LETSENCRYPT_HOST=$PROJECT_BASE_URL
            - LETSENCRYPT_EMAIL=$PROJECT_NAME_EMAIL
        # depends_on:
            # - nginx-proxy
            # - letsencrypt
    #    expose:
    #      - "8080:80"
        #ports:
            #- 8080:80
            #- 9443:443
        networks:
            - Net_HL

#?##############################  phpmyadmin  ##########################################
#     pma:
#         container_name: "${PROJECT_NAME}_pma"
#         image: phpmyadmin/phpmyadmin
#         environment:
#             PMA_HOST: $MOODLE_DOCKER_DBHOST
# #            PMA_USER: $DB_ADMIN_USER
# #            PMA_PASSWORD: $DB_ROOT_PASSWORD   #* debe pedir el password
#             UPLOAD_LIMIT: 1G
#             PMA_ARBITRARY: 1
#         ports:
#             - 8100:80
#         networks:
#             - Net_HL
# #     #    labels:
# #     #    - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"

#?##############################  adminer  ##########################################
    adminer:
        image: adminer:$ADMINER_TAG
        container_name: "${PROJECT_NAME}_adminer"
        environment:
            # For PostgreSQL:
            #      ADMINER_DEFAULT_DB_DRIVER: pgsql
    #            some_database: mariadb
            ADMINER_DEFAULT_SERVER: mariadb                                #* puede que no valga
    #            ADMINER_DEFAULT_DB_HOST: $MOODLE_DOCKER_DBHOST            #* puede que no valga
    #            ADMINER_DEFAULT_DB_NAME: $DB_NAME                         #* puede que no valga
    #            ADMINER_PLUGINS0: 'tables-filter tinymce'
    #            ADMINER_PLUGINS: 'login-servers'
    #Create a file "/var/www/html/plugins-enabled/login-servers.php"
        ports:
            - 8100:8080
        networks:
            - Net_HL
#        labels:
#            - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    #     - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"

#?##############################  portainer  ##########################################
    portainer:
        image: portainer/portainer-ce
        container_name: "${PROJECT_NAME}_portainer"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - ./portainer-data:/data:rw
        ports:
            - "9000:9000"
        networks:
            - Net_HL
#        labels:
#            - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy


#?##############################  nginx-proxy  ##########################################
    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: "${PROJECT_NAME}_nginx-proxy"
        restart: always
        ports:
            - "80:80"
#            - "443:443"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - certs:/etc/nginx/certs:ro
            - vhostd:/etc/nginx/vhost.d
            - ./nginxhtml:/usr/share/nginx/html
        labels:
            - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
        networks:
            - Net_HL

#?################################  redis  ############################################
    redis:
        image: redis:latest
        container_name: "${PROJECT_NAME}_redis-moodle"
        restart: unless-stopped
        networks:
            - Net_HL

# #?################################  letsencrypt ##########################################
    letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: "${PROJECT_NAME}_letsencrypt"
        restart: always
        environment:
            - NGINX_PROXY_CONTAINER=nginx-proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro #* 2da ejecucion
#            - /var/run/docker.sock:/tmp/docker.sock:ro  #* 1ra ejecucion
            - certs:/etc/nginx/certs:rw
            - vhostd:/etc/nginx/vhost.d
            - ./nginxhtml:/usr/share/nginx/html
        networks:
            - Net_HL
#
#?################################  final  ############################################
#?################################  final  ############################################

networks:
    Net_HL:

volumes:
    certs:
    html:
    vhostd:


