version: '3.3'
services:

#*************************************** KODI ********************************************
  kodi:
    image: linuxserver/kodi-headless
    container_name: "${PROJECT_NAME}_kodi"
#    restart: unless-stopped
    environment:
      - PGID=1001
      - PUID=1000
      - TZ=Europe/Madrid
    volumes:  
      - ./kodi_data:/config/.kodi
    ports:
      - "8082:8080"
      - "9090:9090"
      - "9777:9777/udp"

#*************************************** NGINX ********************************************
  nginx:
    image: nginx:$NGINX_TAG #TAMBIEN EN ESTE CONTENEDOR SE ACCEDE A LOS ARCHIVOS DE DRUPAL /VAR/WWW/HTML
    container_name: "${PROJECT_NAME}_nginx"
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_SERVER_ROOT: /var/www/html/ 
      VIRTUAL_HOST: $PROJECT_BASE_URL
    volumes:
      - ./certs:/certs/
      - ./var/log:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt
      - ./conf.d:/etc/nginx/conf.d:rw
      - /etc/nginx:/etc/nginx/
    expose:
        - 80
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    # labels:
    #     - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=web"  
    #     - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"
    #     - "traefik.http.routers.${PROJECT_NAME}_nginx_lan.rule=Host(`rokedegea.eu`)"
    #     - "traefik.http.routers.${PROJECT_NAME}_nginx.tls.certresolver=le"   
    #     - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=websecure"    

#*************************************** TRAEFIK ******************************************
#   traefik:
#     image: traefik:v2.0
#     container_name: "${PROJECT_NAME}_traefik"
#     command:
#         - --entrypoints.web.address=:80  
#         - --providers.docker           #new
#       # - --api.insecure=true --providers.docker  # estaba habilitado
#         - --api # renew
#         - --entrypoints.websecure.address=:443     
#         - --certificatesresolvers.le.acme.email=roque.ar@gmail.com 
#         - --certificatesresolvers.le.acme.storage=/acme.json 
#         - --certificatesresolvers.le.acme.tlschallenge=true 
#         - --configFile=./myconfigfile.toml    
#     ports:
#         - "${PROJECT_PORT}:80"
#         - '8888:8080' # Dashboard
# #            - '9443:9443'    # estaba habilitado
#         - '443:443'     
#     volumes:
#         - /var/run/docker.sock:/var/run/docker.sock
#         - ./portainer-data:/data:rw
#         - ./certs:/certs/
#         - "$PWD/acme.json=/acme.json"  #! ./acme.json=/acme.json  not found
#         - /etc/letsencrypt:/etc/letsencrypt       
#     labels:   
#         - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"   
#         - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"    
#         - "traefik.http.routers.redirs.entrypoints=web"        
#         - "traefik.http.routers.redirs.middlewares=redirect-to-https"  

#*************************************** nginx-proxy ****************************************
  nginx-proxy-manager:
    image: jwilder/nginx-proxy
    container_name: "${PROJECT_NAME}_nginx-proxy"   
#    restart: unless-stopped
    ports:
      - '8090:80'
      - '81:81'
      - '4443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
      - ./certs:/certs/
      - ./var/log:/var/log/nginx
      - ./conf.d:/etc/nginx/conf.d   

#*************************************** CERBOT ****************************************
  certbot:
      container_name: "${PROJECT_NAME}_cerbot"
      image: certbot/certbot
      volumes:
          - /etc/letsencrypt:/etc/letsencrypt
          - ./certbot:/var/www/certbot
          - ./certs:/certs/     
          - ./var/log:/var/log/nginx
          - ./conf.d:/etc/nginx/conf.d
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

#*************************************** PORTAINER ***************************************
  portainer:
    image: portainer/portainer-ce:latest  #* root:29su771MA-
    container_name: "${PROJECT_NAME}_portainer"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000

#*************************************** NETDATA *******************************************     
#   netdata:
#     image: netdata/netdata
#     container_name: "${PROJECT_NAME}_netdata"
#     hostname: rokedegea.eu # set to fqdn of host
#     ports:
#         - '19999:19999'
# #     restart: unless-stopped       
#     volumes:
#       - 'netdataconfig:/etc/netdata'
#       - 'netdatalib:/var/lib/netdata'
#       - 'netdatacache:/var/cache/netdata'
#       - '/etc/passwd:/host/etc/passwd:ro'
#       - '/etc/group:/host/etc/group:ro'
#       - '/proc:/host/proc:ro'
#       - '/sys:/host/sys:ro'
#       - '/etc/os-release:/host/etc/os-release:ro'
# #     restart: unless-stopped
#     cap_add:
#       - SYS_PTRACE
#     security_opt:
#       - apparmor:unconfined    
#     environment:
#       - NETDATA_CLAIM_TOKEN=uS1Wxq_GBEg6veq6Y6mxGESGkGW2_XmLM6P6VRaSEOJ7r9autNqPh7ueUE31hV_Z21XOr7eVM4RVe0HVihtdgBVZXbtyNTTwZ590hHUxjYpOlTjbhiJeT_rjipOuzwvCRiSby-8
#       - NETDATA_CLAIM_URL=https://app.netdata.cloud
#       - NETDATA_CLAIM_ROOMS=    

#*************************************** MARIADB *******************************************     
  mariadb:
      image: mariadb:$MARIADB_TAG
      container_name: "${PROJECT_NAME}_mariadb"
      stop_grace_period: 30s
      environment:
          MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
          MYSQL_DATABASE: $DB_NAME
          MYSQL_USER: $DB_USER
          MYSQL_PASSWORD: $DB_PASSWORD
      expose:
          - 3306    
      volumes:
          - ./mariadb-init:/docker-entrypoint-initdb.d #! lee al cargar mysql
          - ./db-data:/var/lib/mysql:rw

#*****************************************     *******************************************     


volumes:
    netdataconfig:
    netdatalib:
    netdatacache:   
    db-data:
    certbot-etc:
    nginx-data:
    portainer-data:
    etc: {}   

networks:
  web:
    external: true
  internal:
    external: false

